oscope_top_test:
  before_script:
    - cd projects/oscope/bmb7_cu
  stage: test
  script:
    - make Voscope_top_tb && make Voscope_top_leep && make clean

# We know the design doesn't yet get evaluated as CDC-clean, at least in part
# due to Verilog inout ports being poorly supported by our tools.
# Please take out the error bypass (echo) if this ever gets fixed.
oscope_cdc:
  before_script:
    - cd projects/oscope/marble_family
  stage: test
  script:
    - make dep && make oscope_prep_yosys.json && (make oscope_prep_cdc.txt || echo "Found CDC violation, as expected; continuing")
  artifacts:
    expire_in: 1 week
    paths:
      - projects/oscope/marble_family/oscope_prep_cdc.txt

oscope_top_bmb7:
  before_script:
    - cd projects/oscope/bmb7_cu && ls /non-free
  stage: synthesis
  script:
    - verilator -V && XILINX_VIVADO=$XILINX_VIVADO PATH=$XILINX_VIVADO/bin:$PATH make oscope_top.bit
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME"
    expire_in: 1 week
    paths:
      - projects/oscope/bmb7_cu/oscope_top.bit

oscope_top_marble:
  before_script:
    - cd projects/oscope/marble_family && ls /non-free
  stage: synthesis
  script:
    - verilator -V && XILINX_VIVADO=$XILINX_VIVADO PATH=$XILINX_VIVADO/bin:$PATH make oscope_top.bit
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME"
    expire_in: 1 week
    paths:
      - projects/oscope/marble_family/oscope_top.bit

# LITEX_INSTALL_PATH is defined in the Docker image
marble_ddr3_test:
  stage: synthesis
  before_script:
    - cd $LITEX_INSTALL_PATH/litex-boards/litex_boards/targets
  script:
    - XILINXD_LICENSE_FILE=$XILINXD_LICENSE_FILE PATH=$XILINX_VIVADO/bin:$PATH && python3 berkeleylab_marble.py --build
    - echo $CI_PROJECT_DIR
    - cp $LITEX_INSTALL_PATH/litex-boards/litex_boards/targets/build/berkeleylab_marble/gateware/berkeleylab_marble.bit $CI_PROJECT_DIR/
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME"
    expire_in: 1 week
    when: always
    paths:
      - berkeleylab_marble.bit

litex_trigger_capture:
  stage: synthesis
  before_script:
    - cd projects/trigger_capture
  script:
    XILINXD_LICENSE_FILE=$XILINXD_LICENSE_FILE PATH=$XILINX_VIVADO/bin:$PATH && make marble.bit
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME"
    expire_in: 1 week
    when: always
    paths:
      - projects/trigger_capture/build/marble/gateware/marble.bit
      - projects/trigger_capture/csr.csv

# oscope_program:
#   before_script:
#     - cd projects/oscope/software/bmb7 && wget -r -nH http://sliderule.dhcp.lbl.gov:8000/{r1,configuration} && cd ..
#   stage: program
#   dependencies:
#     - oscope_top_bmb7
#   script:
#     - export PYTHONPATH=$PYTHONPATH:../../../build-tools/:../../../dsp && python3 prc.py -a 192.168.1.121 -r -b ../bmb7_cu/oscope_top.bit
