%!PS-Adobe-3.0 EPSF-3.0
%%Title: block_mode.eps
%%Creator: XCircuit v3.7 rev40
%%CreationDate: Fri Jun 20 09:05:08 2014
%%Pages: 1
%%BoundingBox: 68 68 521 417
%%DocumentNeededResources: font Helvetica Helvetica-Bold Helvetica-Oblique
%%+ font Times-Roman Symbol
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 3.7
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--11/1/10  (tim.edwards@multigig.com)
%  The Johns Hopkins University (1993-2004)
%  MultiGiG, Inc. (2004-present)
%
%%BeginResource: procset XCIRCproc 3.7 2
%
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0]
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { dup type /stringtype eq showflag 1 eq and { gsave
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg /rotval exch def
	/just exch def just 384 and 0 gt {/mshow {pop} def} {/mshow {show}
	def} ifelse just 16 and 0 gt {gsave rotval rotate 0 1 dtransform
	gsave pagemat setmatrix idtransform exch grestore 1 0 dtransform
	gsave pagemat setmatrix idtransform exch grestore dup abs 1e-9 lt
	{pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse grestore {-1 /rotval
	rotval neg def /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse
	exch -1e-9 lt {-1 /rotval rotval neg def /just just dup 12 and
	4 ne {12 xor} if def} {1} ifelse scale } if /showflag 0 def
	/fspc pspc def /Bline 0 def /Tabs 0 array def /fscale 1.0 def
	/kY 0 def gsave dup 1 add copy 0 exch 1 0 dtransform exch atan rotate
	{exch dup type /stringtype eq {true charpath flattenpath} {dup type
	/arraytype eq {exec} {12 string cvs true charpath flattenpath} ifelse}
	ifelse} repeat pop pathbbox grestore 3 -1 roll pop 3 1 roll just
	1 and 0 gt {just 2 and 0 gt {exch pop neg fspc sub} {exch sub 0.5
	mul neg} ifelse} {pop neg fspc add} ifelse exch Bline exch just 4
	and 0 gt {just 8 and 0 gt {exch pop neg fspc sub} {add 0.5 mul neg}
	ifelse} {pop neg fspc add} ifelse rotval rotate Kn currentpoint
	translate /showflag 1 def /Bline 0 def /Tabs 0 array def /fscale
	1.0 def /kY 0 def {dup type /stringtype eq {mshow} {dup type
	/arraytype eq {exec} {12 string cvs mshow} ifelse} ifelse} repeat
	grestore endclip} def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def
/graphic { gsave 4 index cvx exec /DataSource get resetfile translate 0 0
	moveto neg rotate dup scale cvx exec image grestore endclip} def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate {dup type /dicttype ne {1 dict} if begin % default params
	dup type /dicttype ne {1 dict} if begin % instanced params
	/hlevel hlevel 1 add def /defColor currentcolor sce 3 array astore
	def gsave sce translate 0 0 moveto neg rotate dup type /nametype
	eq not { dup abs currentlinewidth exch div setlinewidth } { pop }
	ifelse dup abs scale clipped 1 and 1 eq {/clipped clipped 1 add def}
	if} bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb end end endclip} bind def

/hlevel 0 def
/endclip {clipped 1 and 1 eq {grestore /clipped clipped 1 sub def} if} def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def style 2048 and 0 gt
  clipped 1 and 0 eq and {clip newpath /clipped clipped 1 add def} {
  style 1 and 0 gt not {closepath} if
  style 1024 and 0 gt {2 setlinecap} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if
  gsave style 16 and 0 gt { style 224 and -5 bitshift style 256 and 0 gt {
  7 exch sub 8 div dup 1 exch sub currentrgbcolor 3 array astore
  {3 copy mul add 4 1 roll pop} forall pop pop setrgbcolor eofill}
  {dup 7 lt {gar exch get ppaint} {pop eofill} ifelse} ifelse}
  {style 256 and 0 gt {1 setgray eofill} if} ifelse grestore style 8 and 0 gt
  style 512 eq or {newpath} {stroke} ifelse grestore endclip} ifelse} def

/addtoy {exch dup dup 2 mul 3 add 1 roll -1 1 { 4 1 roll dup 4 1 roll add
	4 -1 roll 2 mul 1 add index 2 mul 2 add 2 roll} for pop} def
/addtoy1 {1 exch addtoy pop} def
/addtoy3 {3 exch addtoy pop} def
/addtoy4 {4 exch addtoy pop} def
/addtox {exch dup dup 2 mul 3 add 1 roll -1 1 { 4 1 roll dup 4 1 roll 3 -1 roll
	add exch 4 -1 roll 2 mul 1 add index 2 mul 2 add 2 roll} for pop} def
/addtox1 {1 exch addtox pop} def
/addtox3 {3 exch addtox pop} def
/addtox4 {4 exch addtox pop} def
/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop     { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef
	/clipped 0 def} def
/psinsertion {/PSobj save def /showpage {} def /setpagedevice {pop} def bop
	rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

%%BeginSetup

/generic::arrowhead {
% nonetwork
begingate
8 -28 beginpath
3 -18 3 -15 0 0 curveto
-3 -15 -3 -18 -8 -28 curveto
-2 -26 2 -26 8 -28 curveto
249
1.000 endpath
endgate
} def

/generic::dot {
% trivial
begingate
248 1.000 0 0 6 0.000 360.000 xcarc
1.000 0.000 0.000 scb
(x) {/Times-Roman cf} 2 29 0 1.000 0 0 pinlabel
endgate
} def


%%EndSetup

%%Page: block 1
%%PageOrientation: Portrait
/pgsave save def bop
0.7000 inchscale
2.6000 setlinewidth 1442 354 translate

1 1.000 -1168 256 -688 256 2 polygon
1.000 90 -672 256 generic::arrowhead
(cav_mode.v) {/Helvetica-Oblique cf} 2 17 0 1.000 -256 1120 label
(Drive) {/Helvetica cf} 2 17 0 1.000 -1072 272 label
1 1.000 224 304 512 304 2 polygon
(Emitted 1) {/Helvetica cf} 2 17 0 1.000 368 320 label
1 1.000 224 208 512 208 2 polygon
(Emitted 2) {/Helvetica cf} 2 17 0 1.000 368 224 label
(2) {Ss} (x) {/Helvetica cf} 4 17 0 1.000 112 -16 label
(Electromagnetic eigenmode propagator) {/Helvetica-Bold cf} 2 17 0 1.400 -256
1184 label
(Larry Doolittle, LBNL, June 2014) {/Helvetica cf} 2 17 0 1.000 -256 1056 label
(IQ) {/Helvetica cf} 2 17 0 0.700 -1072 224 label
(Outputs at IF) {/Helvetica cf} 2 17 0 0.700 368 160 label
(updated every 10 ns) {/Helvetica cf} 2 17 0 0.700 368 128 label
(Clocks at ~200 MHz in Xilinx 7Axxx) {/Helvetica cf} 2 17 0 1.000 -256 992
label
0.000 0.000 0.000 scb
1 1.000 -928 864 -928 736 -864 768 -864 832 -928 864 5 polygon
(S) {/Symbol cf} 2 21 0 1.000 -896 800 label
sce
(pair_couple.v) {/Helvetica-Oblique cf} 2 17 0 0.700 112 208 label
(upconvert) {/Helvetica cf} 2 17 0 1.000 112 272 label
0 1.000 0 320 0 192 224 192 224 320 4 polygon
(lp_pair.v) {/Helvetica-Oblique cf} 2 17 0 0.700 -272 208 label
(low-pass) {/Helvetica cf} 2 17 0 1.000 -272 272 label
0 1.000 -384 320 -384 192 -160 192 -160 320 4 polygon
1 1.000 -96 256 -96 -16 -16 -16 3 polygon
1 1.000 -608 256 64 0.000 360.000 xcarc
1 1.000 -652 300 -564 212 2 polygon
1 1.000 -652 212 -564 300 2 polygon
(cordicg.v) {/Helvetica-Oblique cf} 2 17 0 0.700 -608 448 label
(CORDIC) {/Helvetica cf} 2 17 0 1.000 -608 512 label
0 1.000 -720 560 -720 432 -496 432 -496 560 4 polygon
1 1.000 -544 256 -400 256 2 polygon
1 1.000 -608 432 -608 336 2 polygon
1 1.000 -160 256 -16 256 2 polygon
1.000 90 -384 256 generic::arrowhead
1.000 90 0 256 generic::arrowhead
1.000 90 0 -16 generic::arrowhead
-1.000 180 -608 320 generic::arrowhead
-1.000 180 112 320 generic::arrowhead
1.000 90 528 304 generic::arrowhead
1.000 90 528 208 generic::arrowhead
(2) {Ss} (V) {/Helvetica cf} 4 17 0 1.000 352 0 label
1 1.000 224 -16 512 -16 2 polygon
1.000 90 528 -16 generic::arrowhead
(complex_mul.v) {/Helvetica-Oblique cf} 2 17 0 0.700 -608 144 label
1 1.000 -1168 832 -944 832 2 polygon
(Dw) {/Symbol cf} 2 17 0 1.000 -1072 848 label
0 1.000 -800 832 -800 768 -736 768 -736 832 4 polygon
(-1) {Ss} (z) {/Helvetica cf} 4 21 0 1.000 -768 800 label
1 1.000 -864 800 -800 800 2 polygon
1 1.000 -736 800 -688 800 -688 688 -992 688 -992 768 -944 768 6 polygon
1.000 90 -928 768 generic::arrowhead
1.000 90 -928 832 generic::arrowhead
(mech_phase) {/Helvetica cf} 2 17 0 0.700 -624 816 label
1 1.000 -688 800 -608 800 -608 576 3 polygon
0.000 0.000 0.000 scb
1 1.000 -416 896 -416 768 -352 800 -352 864 -416 896 5 polygon
sce
(f) {/Symbol cf} (LO ) {/Helvetica cf} 4 17 0 1.000 -1072 944 label
1 1.000 -608 800 -432 800 2 polygon
1 1.000 -1168 928 -480 928 -480 864 -432 864 4 polygon
1 1.000 -352 832 112 832 112 336 3 polygon
-1.000 180 -608 560 generic::arrowhead
1.000 90 -416 800 generic::arrowhead
1.000 90 -416 864 generic::arrowhead
(out_phase) {/Helvetica cf} 2 17 0 0.700 -144 848 label
(-) {/Helvetica cf} 2 21 0 1.000 -400 800 label
0.000 0.000 0.000 scb
(S) {/Symbol cf} 2 21 0 1.000 -384 832 label
sce
1.000 0 -688 800 generic::dot
1.000 0 -608 800 generic::dot
1.000 0 -96 256 generic::dot
0 1.000 0 48 0 -80 224 -80 224 48 4 polygon
(mag_square.v) {/Helvetica-Oblique cf} 2 17 0 0.700 112 -64 label
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
