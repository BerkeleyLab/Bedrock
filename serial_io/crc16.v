module crc16(
   input             clk,
   input      [15:0] din,
   input             zero,
   output reg [15:0] crc
);

   wire [15:0] O = zero ? 16'b0 : crc;
   wire [15:0] D = din;

   always @(posedge clk) begin
      // Machine generated by ./crc_derive 16 0x1021 16
      // D is the 16-bit input data (msb-first)
      // crc and O are the new and old 16-bit CRC
      // Generating polynomial is 0x1021 (normal form, leading 1 suppressed)
      // Reference: https://en.wikipedia.org/wiki/Cyclic_redundancy_check
      crc[0]  <= D[0]^O[0]^D[4]^O[4]^D[8]^O[8]^D[11]^O[11]^D[12]^O[12];
      crc[1]  <= D[1]^O[1]^D[5]^O[5]^D[9]^O[9]^D[12]^O[12]^D[13]^O[13];
      crc[2]  <= D[2]^O[2]^D[6]^O[6]^D[10]^O[10]^D[13]^O[13]^D[14]^O[14];
      crc[3]  <= D[3]^O[3]^D[7]^O[7]^D[11]^O[11]^D[14]^O[14]^D[15]^O[15];
      crc[4]  <= D[4]^O[4]^D[8]^O[8]^D[12]^O[12]^D[15]^O[15];
      crc[5]  <= D[0]^O[0]^D[4]^O[4]^D[5]^O[5]^D[8]^O[8]^D[9]^O[9]^D[11]^O[11]^D[12]^O[12]^D[13]^O[13];
      crc[6]  <= D[1]^O[1]^D[5]^O[5]^D[6]^O[6]^D[9]^O[9]^D[10]^O[10]^D[12]^O[12]^D[13]^O[13]^D[14]^O[14];
      crc[7]  <= D[2]^O[2]^D[6]^O[6]^D[7]^O[7]^D[10]^O[10]^D[11]^O[11]^D[13]^O[13]^D[14]^O[14]^D[15]^O[15];
      crc[8]  <= D[3]^O[3]^D[7]^O[7]^D[8]^O[8]^D[11]^O[11]^D[12]^O[12]^D[14]^O[14]^D[15]^O[15];
      crc[9]  <= D[4]^O[4]^D[8]^O[8]^D[9]^O[9]^D[12]^O[12]^D[13]^O[13]^D[15]^O[15];
      crc[10] <= D[5]^O[5]^D[9]^O[9]^D[10]^O[10]^D[13]^O[13]^D[14]^O[14];
      crc[11] <= D[6]^O[6]^D[10]^O[10]^D[11]^O[11]^D[14]^O[14]^D[15]^O[15];
      crc[12] <= D[0]^O[0]^D[4]^O[4]^D[7]^O[7]^D[8]^O[8]^D[15]^O[15];
      crc[13] <= D[1]^O[1]^D[5]^O[5]^D[8]^O[8]^D[9]^O[9];
      crc[14] <= D[2]^O[2]^D[6]^O[6]^D[9]^O[9]^D[10]^O[10];
      crc[15] <= D[3]^O[3]^D[7]^O[7]^D[10]^O[10]^D[11]^O[11];
   end

   initial crc = 0;

endmodule
