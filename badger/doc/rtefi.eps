%!PS-Adobe-3.0 EPSF-3.0
%%Title: rtefi.eps
%%Creator: XCircuit v3.8 rev78
%%CreationDate: Fri May 31 13:06:27 2019
%%Pages: 1
%%BoundingBox: 68 68 832 635
%%DocumentNeededResources: font Helvetica Helvetica-Bold Helvetica-Oblique
%%+ font Times-Roman Symbol
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 3.8
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--11/1/10  (tim.edwards@multigig.com)
%  The Johns Hopkins University (1993-2004)
%  MultiGiG, Inc. (2004-2012)
%
%%BeginResource: procset XCIRCproc 3.8 0
%
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0]
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { dup type /stringtype eq showflag 1 eq and { gsave
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/MR { /twidth exch def } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg
	/rotval exch def /twidth 100000 def /just exch def just 384 and
	0 gt {/mshow {pop} def} {/mshow {show} def} ifelse just 16 and 0
	gt {gsave rotval rotate 0 1 dtransform gsave pagemat setmatrix
	idtransform exch grestore 1 0 dtransform gsave pagemat setmatrix
	idtransform exch grestore dup abs 1e-9 lt {pop mul 0 gt} {3 1 roll
	pop pop 0 lt} ifelse grestore {-1 /rotval rotval neg def /just just
	dup 3 and 1 ne {3 xor} if def} {1} ifelse exch -1e-9 lt {-1 /rotval
	rotval neg def /just just dup 12 and 4 ne {12 xor} if def} {1}
	ifelse scale } if /showflag 0 def /fspc pspc def /Bline 0 def /Tabs
	0 array def /fscale 1.0 def /kY 0 def gsave dup 1 add copy dup
	1 0 dtransform exch atan rotate {exch dup type /stringtype eq {gsave
        dup gsave newpath 0 0 moveto true charpath flattenpath pathbbox pop
	exch pop exch pop grestore currentpoint pop add twidth
	ge {grestore CR exch 1 add dup 2 add {CR} exch 1 roll exch} {grestore}
	ifelse true charpath flattenpath} {dup type /arraytype eq {exec} {12
	string cvs true charpath flattenpath} ifelse} ifelse} repeat exch pop
	pathbbox grestore 3 -1 roll pop 3 1 roll just 1 and 0 gt {just 2 and
	0 gt {exch pop neg fspc sub} {exch sub 0.5 mul neg} ifelse} {pop neg
	fspc add} ifelse exch Bline exch just 4 and 0 gt {just 8 and 0 gt
	{exch pop neg fspc sub} {add 0.5 mul neg} ifelse} {pop neg fspc add}
	ifelse rotval rotate Kn currentpoint translate /showflag 1 def /Bline
	0 def /Tabs 0 array def /fscale 1.0 def /kY 0 def {dup type
	/stringtype eq {mshow} {dup type /arraytype eq {exec} {12 string cvs
	mshow} ifelse} ifelse} repeat grestore endclip} def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def
/graphic { gsave 4 index cvx exec /DataSource get resetfile translate 0 0
	moveto neg rotate dup scale cvx exec image grestore endclip} def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate {dup type /dicttype ne {1 dict} if begin % default params
	dup type /dicttype ne {1 dict} if begin % instanced params
	/hlevel hlevel 1 add def /defColor currentcolor sce 3 array astore
	def gsave sce translate 0 0 moveto neg rotate dup type /nametype
	eq not { dup abs currentlinewidth exch div setlinewidth } { pop }
	ifelse dup abs scale clipped 1 and 1 eq {/clipped clipped 1 add def}
	if} bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb end end endclip} bind def

/hlevel 0 def
/endclip {clipped 1 and 1 eq {grestore /clipped clipped 1 sub def} if} def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def style 2048 and 0 gt
  clipped 1 and 0 eq and {clip newpath /clipped clipped 1 add def} {
  style 1 and 0 gt not {closepath} if
  style 1024 and 0 gt {2 setlinecap 0 setlinejoin} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if
  gsave style 16 and 0 gt { style 224 and -5 bitshift style 256 and 0 gt {
  7 exch sub 8 div dup 1 exch sub currentrgbcolor 3 array astore
  {3 copy mul add 4 1 roll pop} forall pop pop setrgbcolor eofill}
  {dup 7 lt {gar exch get ppaint} {pop eofill} ifelse} ifelse}
  {style 256 and 0 gt {1 setgray eofill} if} ifelse grestore style 8 and 0 gt
  style 512 eq or {newpath} {stroke} ifelse grestore endclip} ifelse} def

/addtoy {exch dup dup 2 mul 3 add 1 roll -1 1 { 4 1 roll dup 4 1 roll add
	4 -1 roll 2 mul 1 add index 2 mul 2 add 2 roll} for pop} def
/addtoy1 {1 exch addtoy pop} def
/addtoy3 {3 exch addtoy pop} def
/addtoy4 {4 exch addtoy pop} def
/addtox {exch dup dup 2 mul 3 add 1 roll -1 1 { 4 1 roll dup 4 1 roll 3 -1 roll
	add exch 4 -1 roll 2 mul 1 add index 2 mul 2 add 2 roll} for pop} def
/addtox1 {1 exch addtox pop} def
/addtox3 {3 exch addtox pop} def
/addtox4 {4 exch addtox pop} def
/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop     { 1 setlinecap 2 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef
	/clipped 0 def} def
/psinsertion {/PSobj save def /showpage {} def /setpagedevice {pop} def bop
	rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

%%BeginSetup

/generic::arrowhead {
% nonetwork
begingate
8 -28 beginpath
3 -18 3 -15 0 0 curveto
-3 -15 -3 -18 -8 -28 curveto
-2 -26 2 -26 8 -28 curveto
249
1.000 endpath
endgate
} def

/generic::dot {
% trivial
begingate
248 1.000 0 0 6 0.000 360.000 xcarc
1.000 0.000 0.000 scb
(x) {/Times-Roman cf} 2 29 0 1.000 0 0 pinlabel
endgate
} def


%%EndSetup

%%Page: rtefi 1
%%PageOrientation: Portrait
/pgsave save def bop
0.7500 inchscale
2.6000 setlinewidth 1738 1062 translate


(LBNL ATG's Real-Time Ethernet Fabric Infrastructure \(building on PSPEPS experience\))
{/Helvetica-Bold cf} 2 17 0 1.200 -128 1024 label
(GMII) {/Helvetica cf} 2 21 0 1.000 -1440 224 label
(Input) {/Helvetica cf} 2 21 0 1.000 -1440 272 label
(Input scanner) {/Helvetica cf} 2 21 0 1.000 -880 256 label
(DPRAM) {/Helvetica cf} 2 21 0 1.000 -384 256 label
(Status known by end of each packet:) {/Helvetica cf} 2 16 0 1.000 -752 -464
label
(CRC32 OK) {/Helvetica cf} 2 16 0 1.000 -704 -752 label
0.600 0.600 0.600 scb
(Authentication passed) {/Helvetica cf} 2 16 0 1.000 -704 -800 label
sce
(UDP) {/Helvetica cf} 2 16 0 1.000 -704 -704 label
(MAC match) {/Helvetica cf} 2 16 0 1.000 -704 -512 label
(IP match) {/Helvetica cf} 2 16 0 1.000 -704 -560 label
(ICMP echo) {/Helvetica cf} 2 16 0 1.000 -704 -656 label
(ARP request) {/Helvetica cf} 2 16 0 1.000 -704 -608 label
0 1.000 -1024 304 -1024 208 -736 208 -736 304 4 polygon
1 1.000 -1376 256 -1040 256 2 polygon
1.000 90 -1024 256 generic::arrowhead
0 1.000 -480 304 -480 208 -288 208 -288 304 4 polygon
1 1.000 -560 256 -496 256 2 polygon
1.000 90 -480 256 generic::arrowhead
3 1.000 -384 928 -384 304 2 polygon
3 1.000 -384 208 -384 -16 2 polygon
(Tx clock domain) {/Helvetica cf} 2 16 0 1.000 -352 880 label
(Rx clock domain) {/Helvetica cf} 2 19 0 1.000 -416 880 label
1 1.000 944 256 1056 256 2 polygon
1.000 90 1072 256 generic::arrowhead
(GMII) {/Helvetica cf} 2 16 0 1.000 1088 208 label
(Output) {/Helvetica cf} 2 16 0 1.000 1088 256 label
(MAC/IP) {/Helvetica cf} 2 21 0 1.000 -1136 112 label
(Config) {/Helvetica cf} 2 21 0 1.000 -1136 64 label
0 1.000 -1232 144 -1232 16 -1040 16 -1040 144 4 polygon
0.600 0.600 0.600 scb
(keys) {/Helvetica cf} 2 21 0 1.000 -1120 -128 label
(authentication) {/Helvetica cf} 2 21 0 1.000 -1136 -80 label
0 1.000 -1280 -48 -1280 -176 -992 -176 -992 -48 4 polygon
sce
1 1.000 -976 192 -976 80 -1024 80 3 polygon
0.600 0.600 0.600 scb
1 1.000 -912 192 -912 -112 -976 -112 3 polygon
sce
-1.000 270 -1040 80 generic::arrowhead
0.600 0.600 0.600 scb
-1.000 270 -976 -112 generic::arrowhead
sce
1.000 0 -976 208 generic::arrowhead
0.600 0.600 0.600 scb
1.000 0 -912 208 generic::arrowhead
sce
3 1.000 -848 208 -848 -448 -784 -448 3 polygon
1.000 90 -768 -448 generic::arrowhead
0 1.000 688 368 688 144 944 144 944 368 4 polygon
(signature) {/Helvetica cf} 2 21 0 1.000 816 256 label
1.000 90 688 256 generic::arrowhead
(insertion) {/Helvetica cf} 2 21 0 1.000 816 192 label
0.800 0.800 0.800 scb
1 1.000 816 128 816 -112 752 -112 3 polygon
-1.000 270 736 -112 generic::arrowhead
1.000 0 816 144 generic::arrowhead
sce
(CRC32 and) {/Helvetica cf} 2 21 0 1.000 816 320 label
(Length and status bits are written as trusted "badge,") {/Helvetica cf} 2 16 0
1.000 112 -464 label
(All clients \(except soft-core MAC\) have matched,) {/Helvetica cf} 2 16 0
1.000 112 -640 label
0.000 0.000 0.000 scb
0 1.000 32 -144 32 -240 288 -240 288 -144 4 polygon
sce
(mem_gateway) {/Helvetica cf} 2 21 0 1.000 336 688 label
0.600 0.600 0.600 scb
0 1.000 160 864 160 768 512 768 512 864 4 polygon
sce
0 1.000 160 736 160 640 512 640 512 736 4 polygon
(hello) {/Helvetica cf} 2 21 0 1.000 336 432 label
0 1.000 160 608 160 512 512 512 512 608 4 polygon
0 1.000 160 480 160 384 512 384 512 480 4 polygon
(fixed latency; therefore no collisions possible) {/Helvetica cf} 2 16 0 1.000
160 -688 label
(s\) shift register) {/Helvetica cf} (m) {/Symbol cf}
(DPRAM is \(mostly\) a 1 MTU \(12 ) {/Helvetica cf} 6 16 0 1.000 112 -576 label
(See additional notes for details) {/Helvetica cf} 2 16 0 1.000 112 -800 label
0.800 0.800 0.800 scb
(keys) {/Helvetica cf} 2 21 0 1.000 592 -128 label
(authentication) {/Helvetica cf} 2 21 0 1.000 592 -80 label
0 1.000 448 -48 448 -176 736 -176 736 -48 4 polygon
sce
0 1.000 -208 304 -208 208 -16 208 -16 304 4 polygon
(construct) {/Helvetica cf} 2 21 0 1.000 -112 256 label
1 1.000 -288 256 -224 256 2 polygon
1.000 90 -208 256 generic::arrowhead
1 1.000 -608 304 -544 368 -224 368 -176 320 4 polygon
(Gray code) {/Helvetica cf} 2 16 0 0.750 -592 384 label
1.000 135 -160 304 generic::arrowhead
1 1.000 -16 256 48 256 2 polygon
1.000 90 64 256 generic::arrowhead
0 1.000 64 320 64 208 608 208 608 320 4 polygon
(data transformer) {/Helvetica cf} 2 21 0 1.000 336 288 label
(built-in ARP, ICMP echo) {/Helvetica cf} 2 21 0 0.750 336 240 label
1 1.000 608 256 672 256 2 polygon
(speed_test) {/Helvetica cf} 2 21 0 1.000 336 560 label
0.600 0.600 0.600 scb
(???) {/Helvetica cf} 2 21 0 1.000 336 816 label
sce
-1.000 180 576 320 generic::arrowhead
1 1.000 576 816 576 336 2 polygon
1 1.000 512 816 576 816 2 polygon
1 1.000 512 688 576 688 2 polygon
1 1.000 512 560 576 560 2 polygon
1 1.000 512 432 576 432 2 polygon
1.000 0 576 688 generic::dot
1.000 0 576 560 generic::dot
1.000 0 576 432 generic::dot
1 1.000 144 816 96 816 2 polygon
1 1.000 96 816 96 320 2 polygon
1 1.000 144 688 96 688 2 polygon
1 1.000 144 560 96 560 2 polygon
1 1.000 144 432 96 432 2 polygon
-1.000 0 96 688 generic::dot
-1.000 0 96 560 generic::dot
-1.000 0 96 432 generic::dot
1.000 90 160 432 generic::arrowhead
1.000 90 160 560 generic::arrowhead
1.000 90 160 688 generic::arrowhead
1.000 90 160 816 generic::arrowhead
(MAC/IP) {/Helvetica cf} 2 21 0 1.000 -224 112 label
(Config) {/Helvetica cf} 2 21 0 1.000 -224 64 label
0 1.000 -320 144 -320 16 -128 16 -128 144 4 polygon
1 1.000 -64 192 -64 80 -112 80 3 polygon
-1.000 270 -128 80 generic::arrowhead
1.000 0 -64 208 generic::arrowhead
0.000 0.000 0.000 scb
(Tx MAC) {/Helvetica cf} 2 21 0 1.000 160 -192 label
(busy) {/Helvetica cf} 2 28 0 0.750 -576 -32 label
0 1.000 -480 -112 -480 -16 -288 -16 -288 -112 4 polygon
(precog) {/Helvetica cf} 2 21 0 1.000 -384 -64 label
sce
(UDP port) {/Helvetica cf} 2 21 0 1.000 -1104 448 label
(CAM) {/Helvetica cf} 2 21 0 1.000 -1104 400 label
0 1.000 -1200 368 -1200 496 -1008 496 -1008 368 4 polygon
1 1.000 -944 320 -944 432 -992 432 3 polygon
1.000 270 -1008 432 generic::arrowhead
-1.000 180 -944 304 generic::arrowhead
(Packet Badger) {/Times-Roman cf} 2 17 0 2.800 -128 1104 label
0 1.000 256 1184 256 1104 336 1104 336 1184 4 polygon
0 1.000 -592 1184 -592 1104 -512 1104 -512 1184 4 polygon
0 1.000 416 1184 416 1104 496 1104 496 1184 4 polygon
0 1.000 -752 1184 -752 1104 -672 1104 -672 1184 4 polygon
5 1.000 64 352 608 352 688 432 976 432 976 -304 -1312 -304 -1312 608 -192 608
64 352 9 polygon
(pbuf_writer.v) {/Helvetica-Oblique cf} 2 16 0 0.750 -608 176 label
(rtefi_center.v) {/Helvetica-Oblique cf} 2 16 0 0.750 720 -336 label
(at Tx \(xformer.v\) mux) {/Helvetica cf} 2 16 0 1.000 160 -736 label
4 1.000 -1344 928 -1344 -352 1008 -352 1008 928 4 polygon
(rtefi_blob.v \(machine-generated basd on list of clients\))
{/Helvetica-Oblique cf} 2 16 0 0.750 208 -384 label
(construct.v) {/Helvetica-Oblique cf} 2 19 0 0.750 -112 176 label
(xformer.v) {/Helvetica-Oblique cf} 2 19 0 0.750 560 176 label
(ethernet_crc_add.v) {/Helvetica-Oblique cf} 2 19 0 0.750 784 112 label
(udp_port_cam.v) {/Helvetica-Oblique cf} 2 16 0 0.750 -1200 336 label
(prepended to each packet in DPRAM) {/Helvetica cf} 2 16 0 1.000 160 -512 label
0.000 0.000 0.000 scb
(Rx MAC) {/Helvetica cf} 2 21 0 1.000 -576 -192 label
0 1.000 -704 -144 -704 -240 -448 -240 -448 -144 4 polygon
sce
1 1.000 -736 256 -672 256 2 polygon
1.000 90 -656 256 generic::arrowhead
0 1.000 -656 304 -656 208 -560 208 -560 304 4 polygon
(scanner.v) {/Helvetica-Oblique cf} 2 16 0 0.750 -864 320 label
1 1.000 -624 208 -624 -128 2 polygon
-1.000 180 -624 -144 generic::arrowhead
1.000 0 160 208 generic::arrowhead
1 1.000 160 -144 160 192 2 polygon
3 1.000 -752 -352 -752 -192 -704 -192 3 polygon
3 1.000 -448 -192 32 -192 2 polygon
3 1.000 288 -192 336 -192 336 -352 3 polygon
(Host clock domain) {/Helvetica cf} 2 17 0 1.000 -208 -240 label
1 1.000 -272 -64 96 -64 96 -128 3 polygon
-1.000 270 -288 -64 generic::arrowhead
-1.000 180 96 -144 generic::arrowhead
(length, trigger) {/Helvetica cf} 2 16 0 0.750 -192 -48 label
3 1.000 -384 -112 -384 -192 2 polygon
1 1.000 -784 208 -784 -64 -512 -64 3 polygon
1.000 90 -480 -64 generic::arrowhead
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
