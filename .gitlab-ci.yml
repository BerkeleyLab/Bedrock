stages:
  - build
  - test
  - deploy
  - flake8

variables:
  CI_REGISTRY: mohs.dhcp.lbl.gov
  CONTAINER_IMAGE: $CI_REGISTRY/testing_base
  CONTAINER_IM_IMAGE: $CI_REGISTRY/riscv_bloat
  DOCKER_HOST: tcp://docker:2375/
  DOCKER_DRIVER: overlay2

image: $CONTAINER_IMAGE:$CI_COMMIT_REF_NAME

services:
  - name: docker:dind
    entrypoint: ["dockerd-entrypoint.sh"]
    command: ["--insecure-registry", "mohs.dhcp.lbl.gov"]

build:
  image: docker:stable
  stage: build
  before_script:
    - cat /etc/hosts
    - docker info
    - echo $CONTAINER_IMAGE:$CI_COMMIT_REF_NAME
    - echo $CONTAINER_IM_IMAGE:$CI_COMMIT_REF_NAME
  script:
    - docker pull $CONTAINER_IMAGE:$CI_COMMIT_REF_NAME || true
    - docker pull $CONTAINER_IM_IMAGE:$CI_COMMIT_REF_NAME || true
    - docker build --cache-from $CONTAINER_IM_IMAGE:$CI_COMMIT_REF_NAME --target riscv-builder -t $CONTAINER_IM_IMAGE:$CI_COMMIT_REF_NAME .
    - docker build --cache-from $CONTAINER_IM_IMAGE:$CI_COMMIT_REF_NAME --cache-from $CONTAINER_IMAGE:$CI_COMMIT_REF_NAME -t $CONTAINER_IMAGE:$CI_COMMIT_REF_NAME .
    - docker push $CONTAINER_IM_IMAGE:$CI_COMMIT_REF_NAME
    - docker push $CONTAINER_IMAGE:$CI_COMMIT_REF_NAME
  only:
    changes:
      - Dockerfile*
      - .gitlab-ci.yml

dsp_test:
  before_script:
    - cd dsp && export PYTHONPATH=../build-tools/
  stage: test
  script:
    - make && make checks

digaree_test:
  before_script:
    - cd dsp/digaree
  stage: test
  script:
    - make

cmoc_test:
  before_script:
    - cd cmoc && export PYTHONPATH=../build-tools/
  stage: test
  script:
    - make && make checks

cordic_test:
  before_script:
    - cd cordic && make clean
  stage: test
  script:
    - make all

rtsim_test:
  before_script:
    - cd rtsim && make clean && make
  stage: test
  script:
    - make clean && make checks && make rtsim.dat

flake8:
  stage: flake8
  script:
   - find . -name "*.py" | xargs flake8

badger_test:
  before_script:
    - cd badger/tests && make clean
  stage: test
  script:
    - make && make Vrtefi_blob

peripheral_test:
  before_script:
    - cd peripheral_drivers/idelay_scanner
  stage: test
  script:
    - make

oscope_top:
  before_script:
    - cd projects/oscope/bmb7_cu && ls /non-free
  stage: deploy
  script:
    - XILINX_VIVADO=/non-free/Xilinx/Vivado/2018.1 PATH=$XILINX_VIVADO/bin:$PATH make oscope_top.bit
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME"
    expire_in: 1 week
    paths:
      - projects/oscope/bmb7_cu/oscope_top.bit

badger_ac701:
  stage: deploy
  script:
    - XILINX_VIVADO=/non-free/Xilinx/Vivado/2018.1 PATH=$XILINX_VIVADO/bin:$PATH && cd badger/tests && make ac701_rgmii_vtest.bit && sh teststand_ac701.sh && echo hi
